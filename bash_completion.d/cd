# This meta-cd function observes the CDPATH variable, so that cd additionally
# completes on directories under those specified in CDPATH.
#
_cd()
{
    local cur prev words cword
    _init_completion || return

    local IFS=$'\n' i j k

    compopt -o filenames


    # Expand dots to dot-dot component.
    local x='' y='' z=3
    while [[ ! -d $cur ]] && [[ ${cur:${#x}} =~ ((^|/)([.]{3,}))(/.*)?$ ]]; do

        if [[ -n $(compgen -d -- $cur) ]]; then
            if [[ $cur == ..+(.) ]] || [[ $cur == */..+(.) ]]; then
                COMPREPLY+=("$cur/")
            fi
            break
        fi
        x="${cur%%${BASH_REMATCH[0]}*}${BASH_REMATCH[1]}"
        if [[ ! -d $x ]]; then
            y='..'
            for ((z = 3; z <= ${#BASH_REMATCH[3]}; z++)); do
                y+='/..'
            done
            cur="${cur%%${BASH_REMATCH[0]}*}${BASH_REMATCH[2]}${y}${BASH_REMATCH[4]}"
        fi
    done

    # Use standard dir completion if no CDPATH or parameter starts with /,
    # ./ or ../
    if [[ -z "${CDPATH:-}" || "$cur" == ?(.)?(.)/* ]]; then
        _filedir -d
        return
    fi

    local -r mark_dirs=$(_rl_enabled mark-directories && echo y)
    local -r mark_symdirs=$(_rl_enabled mark-symlinked-directories && echo y)

    # we have a CDPATH, so loop on its contents
    for i in ${CDPATH//:/$'\n'}; do
        # create an array of matched subdirs
        k="${#COMPREPLY[@]}"
        for j in $( compgen -d -- $i/$cur ); do
            if [[ ( $mark_symdirs && -h $j || $mark_dirs && ! -h $j ) && ! -d ${j#$i/} ]]; then
                j+="/"
            fi
            COMPREPLY[k++]=${j#$i/}
        done
    done

    _filedir -d

    if [[ ${#COMPREPLY[@]} -eq 1 ]]; then
        i=${COMPREPLY[0]}
        if [[ "$i" == "$cur" && $i != "*/" ]]; then
            COMPREPLY[0]="${i}/"
        fi
    fi
    return
}

if shopt -q cdable_vars; then
    complete -v -F _cd -o nospace cd pushd
else
    complete -F _cd -o nospace cd pushd
fi
